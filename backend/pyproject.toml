[tool.poetry]
name = "app"
version = "0.3.0"
description = "API to manage user API key"
authors = ["Your Name <you@example.com>"]
readme = "README.MD"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
uvicorn = "^0.29.0"
httpx = "^0.27.0"
pydantic-settings = "^2.2.1"
pyyaml = "^6.0.1"
aiocache = "^0.12.2"
pyjwt = {extras = ["crypto"], version = "^2.8.0"}

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
pytest = "^8.2.0"
bandit = "^1.7.7"
mypy = "^1.10.0"
pylint = "^3.1.0"
anyio = "^4.3.0"
pylint-pydantic = "^0.3.2"
freezegun = "^1.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Mypy rules
# Based on this https://careers.wolt.com/en/blog/tech/professional-grade-mypy-configuration
[tool.mypy]
plugins = [
  "pydantic.mypy"
]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true

[tool.black]
line-length = 100

[tool.pylint]
load-plugins = "pylint_pydantic"
min-similarity-lines=10

[tool.poetry.scripts]
start-dev = "app.main:start_dev"
format = "scripts.poetry.scripts:format_code"
format-check = "scripts.poetry.scripts:format_code_check"
lint = "scripts.poetry.scripts:lint_code"
type-check = "scripts.poetry.scripts:type_check"
sec-check = "scripts.poetry.scripts:security_check"
test = "scripts.poetry.scripts:run_tests"